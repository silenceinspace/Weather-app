/* Use custom font which is bold by default */
@font-face {
  font-family: 'customFont';
  src: url(./fonts/RobotoMono-Bold.ttf) format('truetype');
}

:root {
  /* Color property */
  --color-main-text: white;
  --color-weather-info: yellow;
  --color-error-message: red;
  --button-color-on-hover: purple;
  --select-element-color: purple;
  --footer-color: orange;
  --footer-color-on-hover: red;

  /* Font-size property */
  --font-size-titles: 1.7rem;
  --font-size-input-field: 1.5rem;
  --font-size-error-message: 1.3rem;
  --font-size-weather-info: 1.3rem;
  --font-size-smaller-elements: 1.3rem;

  /* Input properties  */
  --input-field-width: 200px;
  --input-field-height: 40px;
  --input-border: 2px solid black;
  --input-padding: 5px 20px;
  --input-box-shadow: 0 0 20px 5px purple;

  /* Button properties */
  --button-background-color: orange;
  --button-padding: 5px 10px;

  /* Weather info block properties*/
  --main-block-padding: 0 250px;
  --weather-info-block-background: linear-gradient(0deg, blue, 5%, purple);
  --weather-info-block-border: 2px solid black;
  --weather-icon-width: 130px;
  --weather-icon-height: 130px;
  --weather-cell-padding: 10px;

  /* Border-radius property */
  --big-rounded-corners: 15px;
  --small-rounded-corners: 5px;

  /* Loader spinner */
  --loader-animation-spin-color: 15px solid blue;
  --loader-animation-width: 80px;
  --loader-animation-height: 80px;
  --loader-spin-speed: 2s;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: grid;
  grid-template-rows: 1fr 50px;
  background-image: url(./images/main-theme.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;
  font-family: 'customFont', sans-serif;
}

input:hover,
select:hover {
  cursor: pointer;
}

#content {
  display: grid;
  grid-template-rows: 100px 1fr;
  position: relative;
}

.form {
  display: flex;
  align-items: center;
  justify-content: center;
}

.form p {
  display: flex;
  gap: 20px;
  position: relative;
}

/* Display an error message if a request was wrong */
span.error-message {
  position: absolute;
  top: 40px;
  color: var(--color-error-message);
  font-size: var(--font-size-error-message);
}

.form input,
.form button {
  appearance: none;
}

/* Make sure that input, button, select elements have the same Robotomono font */
button,
input,
select {
  font-family: inherit;
}

.form input {
  font-style: italic;
  background-color: transparent;

  padding: var(--input-padding);
  border: var(--input-border);
  border-radius: var(--big-rounded-corners);
  width: var(--input-field-width);
  height: var(--input-field-height);
  color: var(--color-main-text);
  font-size: var(--font-size-input-field);
}

.form input:focus {
  outline: none;
  box-shadow: var(--input-box-shadow);
}

.form button {
  border: none;
  background-color: var(--button-background-color);
  padding: var(--button-padding);
  font-size: var(--font-size-smaller-elements);
  color: var(--color-main-text);
  border-radius: var(--small-rounded-corners);
}

.form button:hover,
.form button:focus {
  text-decoration: underline;
  color: var(--button-color-on-hover);
}

.form button:focus {
  outline: none;
}

.main {
  display: grid;
  grid-template-rows: 50px 1fr 50px;
  gap: 10px;
  padding: var(--main-block-padding);
}

.toggle-temperature {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
}

.toggle-temperature label {
  font-size: var(--font-size-titles);
  color: var(--color-main-text);
}

.toggle-temperature select {
  font-style: italic;
  color: var(--select-element-color);
  font-size: var(--font-size-smaller-elements);
}

.weather-info {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  position: relative;
  font-size: var(--font-size-weather-info);
}

.weather-info > .weather-cell {
  display: grid;
  grid-template-rows: 40px 1fr 40px 80px;
  align-items: center;
  justify-items: center;
  padding: var(--weather-cell-padding);
  color: var(--color-weather-info);
  border: var(--weather-info-block-border);
  background: var(--weather-info-block-background);
}

/* Create a block with rounded corners */
.weather-info > .weather-cell:nth-child(1) {
  border-top-left-radius: var(--big-rounded-corners);
  border-bottom-left-radius: var(--big-rounded-corners);
}

.weather-info > .weather-cell:nth-child(3) {
  border-top-right-radius: var(--big-rounded-corners);
  border-bottom-right-radius: var(--big-rounded-corners);
}

.weather-info > .weather-cell:nth-child(2) {
  border-left: 0;
  border-right: 0;
}

.weather-cell .icon {
  /* Disable selecting svgs */
  pointer-events: none;
  height: var(--weather-icon-height);
  width: var(--weather-icon-width);
}

.current-location {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-titles);
  color: var(--color-main-text);
}

/* Animate loading data */
.loader {
  position: absolute;
  /* Center an absolute position element, translate is relevant to the element's sizes while top and left position look at the parent with relative property */
  top: 50%;
  left: 50%;
  translate: -50% -50%;

  z-index: 10;
  border: 15px solid lightgrey;
  border-radius: 50%;
  animation: spin linear infinite;
  animation-duration: var(--loader-spin-speed);
  border-top: var(--loader-animation-spin-color);
  width: var(--loader-animation-width);
  height: var(--loader-animation-height);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loader.hidden {
  display: none;
}

.loader.visible {
  display: block;
}

.module {
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: grey;
  opacity: 80%;
  z-index: 5;
  border-radius: var(--big-rounded-corners);
}

.module.passive {
  display: none;
}

.module.active {
  display: block;
}

#footer {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--footer-color);
  font-size: var(--font-size-smaller-elements);
}

#footer a {
  text-decoration: none;
  color: var(--color-main-text);
}

#footer a:hover,
#footer a:focus {
  text-decoration: underline;
  color: var(--footer-color-on-hover);
}

#footer a:focus {
  outline: none;
}
